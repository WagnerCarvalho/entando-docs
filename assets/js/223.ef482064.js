(window.webpackJsonp=window.webpackJsonp||[]).push([[223],{1018:function(t,e,a){"use strict";a.r(e);var s=a(32),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"build-and-publish-a-simple-bundle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build-and-publish-a-simple-bundle"}},[t._v("#")]),t._v(" Build and Publish a Simple Bundle")]),t._v(" "),a("h2",{attrs:{id:"overview"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overview"}},[t._v("#")]),t._v(" Overview")]),t._v(" "),a("p",[t._v("In this tutorial, you will learn how to create a simple Entando Bundle and deploy it into the "),a("RouterLink",{attrs:{to:"/next/docs/getting-started/concepts-overview.html#entando-component-repository"}},[t._v("Entando Component Repository")]),t._v(" (ECR). This involves manually defining a bundle with a single widget, checking the bundle artifacts into Git, applying the Entando Bundle custom resource to Kubernetes, and then installing the bundle into an application.")],1),t._v(" "),a("h2",{attrs:{id:"prerequisites"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),a("ul",[a("li",[t._v("Use the "),a("RouterLink",{attrs:{to:"/next/docs/reference/entando-cli.html#check-the-environment"}},[t._v("Entando CLI")]),t._v(" to verify all dependencies are installed (e.g. Java, npm, Git).")],1)]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ent check-env develop\n")])])]),a("ul",[a("li",[t._v("Authenticated Git credentials, an empty Git repository and an available Entando instance are required for the commands below to execute without errors.")])]),t._v(" "),a("p",[t._v("Publishing a bundle can be simplified by using the "),a("code",[t._v("ent prj")]),t._v(" command and its publication system (pbs) convenience methods. Both the CLI and manual commands are provided.")]),t._v(" "),a("h2",{attrs:{id:"create-the-project-structure"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-the-project-structure"}},[t._v("#")]),t._v(" Create the Project Structure")]),t._v(" "),a("p",[t._v("First, create a parent project directory (e.g. "),a("code",[t._v("example-bundle")]),t._v(") along with a child bundle directory. In a project generated by the "),a("RouterLink",{attrs:{to:"/next/docs/create/component-gen-overview.html"}},[t._v("Entando Component Generator")]),t._v(", the microservice and micro frontend source files live under the parent directory.")],1),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p example-bundle/bundle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" example-bundle/bundle\n")])])]),a("h2",{attrs:{id:"add-a-simple-widget"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#add-a-simple-widget"}},[t._v("#")]),t._v(" Add a Simple Widget")]),t._v(" "),a("p",[t._v("Create a widget directory")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" widgets\n")])])]),a("p",[t._v("Create a widget descriptor file within that directory")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" widgets/example-widget.yaml\n")])])]),a("p",[t._v("Populate the widget descriptor file "),a("code",[t._v("example-widget.yaml")]),t._v(" with a simple definition. Make sure to retain the correct YAML indentation of 2 or 4 spaces.")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("widget\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("titles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("en")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Example Widget\n   "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("it")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Widget d'esempio\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("group")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" free\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("customUi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <h2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("Hi from Example Widget</h2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("h2",{attrs:{id:"create-the-bundle-descriptor"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-the-bundle-descriptor"}},[t._v("#")]),t._v(" Create the Bundle Descriptor")]),t._v(" "),a("p",[t._v("The main file processed by the Entando Component Repository is "),a("code",[t._v("descriptor.yaml")]),t._v(", which describes all of the components within the bundle. The name of the bundle descriptor file must be "),a("code",[t._v("descriptor.yaml")]),t._v(" and it must be stored in the child bundle directory (e.g. "),a("code",[t._v("example-bundle/bundle")]),t._v(").")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" descriptor.yaml\n")])])]),a("p",[t._v("Populate the bundle descriptor file with the following YAML definition")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("code")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bundle\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("description")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" This is an example of an Entando bundle\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("components")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("widgets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" widgets/example"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("widget.yaml\n")])])]),a("p",[t._v("Component descriptor file names and locations (e.g. "),a("code",[t._v("widgets/example-widget.yaml")]),t._v(") are arbitrary since the bundle descriptor explicitly points to those files. Convention is to group components by type with all widgets in one directory, all page templates in another, etc.")]),t._v(" "),a("h2",{attrs:{id:"publish-the-bundle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#publish-the-bundle"}},[t._v("#")]),t._v(" Publish the Bundle")]),t._v(" "),a("p",[t._v("The bundle can be published using the CLI or the steps can be performed manually.")]),t._v(" "),a("h3",{attrs:{id:"cli-steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli-steps"}},[t._v("#")]),t._v(" CLI Steps")]),t._v(" "),a("ol",[a("li",[t._v("Change to the project directory if needed")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" example-bundle\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Initialize the Entando project and accept the defaults")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ent prj init\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Initialize the publication system. This step requires the empty Git repository URL (ending in .git) and your Git credentials.")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ent prj pbs-init\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Publish the bundle to Git. By convention, the first version is assigned the tag "),a("code",[t._v("v0.0.1")]),t._v(', but the prefix "v" is optional.')])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ent prj pbs-publish\n")])])]),a("p",[t._v("Running just the command "),a("code",[t._v("ent prj pbs-publish")]),t._v(" will quickly push subsequent iterations of the bundle to Git. You will be asked to input the bundle version each time. You must be consistent with versioning format and alphanumeric precedence to ensure that iterations are listed in the correct order.")]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[t._v("The bundle can now be deployed into the Entando Component Repository with one command")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ent prj deploy\n")])])]),a("p",[t._v("The "),a("code",[t._v("prj deploy")]),t._v(" command uses the Git repository URL and project name (e.g. "),a("code",[t._v("example-bundle")]),t._v(") to create the custom resource.")]),t._v(" "),a("p",[t._v("Jump to "),a("a",{attrs:{href:"#install-the-bundle-into-an-application"}},[t._v("Install the Bundle into an Application")]),t._v(" to finish installing your bundle.")]),t._v(" "),a("h3",{attrs:{id:"manual-steps"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#manual-steps"}},[t._v("#")]),t._v(" Manual Steps")]),t._v(" "),a("ol",[a("li",[t._v("Change to the bundle directory if needed")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" example-bundle/bundle\n")])])]),a("ol",{attrs:{start:"2"}},[a("li",[t._v("Run the following commands to initialize Git and commit the files")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Init Git repository"')]),t._v("\n")])])]),a("ol",{attrs:{start:"3"}},[a("li",[t._v("Add your remote repository as origin and push the bundle")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" remote "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" origin https://your/remote/repository.git\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push -u origin master\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[t._v("Publish a Git tag")])]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" tag -a "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v0.0.1"')]),t._v(" -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My first tag"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push --tags\n")])])]),a("ol",{attrs:{start:"5"}},[a("li",[t._v("Now that you've published your bundle to Git, you can create the Kubernetes custom resource for it.")])]),t._v(" "),a("p",[t._v("Run the "),a("code",[t._v("ent bundler from-git")]),t._v(" command, providing your remote Git repository URL via the "),a("code",[t._v("--repository")]),t._v(" option and the correct namespace via "),a("code",[t._v("--namespace")]),t._v(". You can also include a thumbnail for your bundle with "),a("code",[t._v("--thumbnail-file")]),t._v(" or "),a("code",[t._v("--thumbnail-url")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("ent bundler from-git --name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("example-bundle --namespace"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("entando --repository"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("https://your/remote/repository.git --dry-run "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" example-bundle.yaml\n")])])]),a("ol",{attrs:{start:"6"}},[a("li",[t._v("Apply this definition to Kubernetes. You may need to first transfer the file to your VM, e.g with "),a("code",[t._v("multipass transfer")]),t._v(".")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("kubectl -n entando apply -f example-bundle.yaml\n")])])]),a("ol",{attrs:{start:"7"}},[a("li",[t._v("Confirm the presence of your custom resource with the command "),a("code",[t._v("kubectl get EntandoDeBundle -n entando")]),t._v(".")])]),t._v(" "),a("h2",{attrs:{id:"install-the-bundle-into-an-application"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-the-bundle-into-an-application"}},[t._v("#")]),t._v(" Install the Bundle into an Application")]),t._v(" "),a("p",[t._v("Your bundle should appear in "),a("code",[t._v("App Builder")]),t._v(" → "),a("code",[t._v("Component Repository")]),t._v(" in your Entando instance. Clicking "),a("code",[t._v("Install")]),t._v(" should allow version selection if your bundle has multiple iterations.")]),t._v(" "),a("p",[t._v("The Entando Platform will then download and install the components contained in the bundle. Once complete, you should see the "),a("code",[t._v("Install")]),t._v(" button change to give you the option to "),a("code",[t._v("Uninstall")]),t._v(" that specific version. If you navigate to "),a("code",[t._v("Components")]),t._v(" → "),a("code",[t._v("Micro Frontends & Widgets")]),t._v(", you should find your custom widget within the "),a("code",[t._v("User")]),t._v(" section.")])])}),[],!1,null,null,null);e.default=n.exports}}]);